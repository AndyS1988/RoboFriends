{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\components\\\\SearchBox.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\components\\\\Card.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\components\\\\CardList.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\components\\\\ErrorBoundary.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\containers\\\\App.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\actions.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\constants.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\reducers.js\",\"C:\\\\Users\\\\andre_000\\\\Desktop\\\\robofriends\\\\src\\\\index.js\"],\"names\":[\"SearchBox\",\"_ref\",\"searchfield\",\"searchChange\",\"react_default\",\"a\",\"createElement\",\"className\",\"type\",\"placeholder\",\"onChange\",\"Card\",\"props\",\"alt\",\"src\",\"concat\",\"id\",\"name\",\"email\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"src_components_Card\",\"key\",\"ErrorBoundary\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"hasError\",\"error\",\"info\",\"setState\",\"children\",\"Component\",\"App\",\"onRequestRobots\",\"_this$props\",\"searchField\",\"onSearchChange\",\"isPending\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"src_components_SearchBox\",\"components_ErrorBoundary\",\"components_CardList\",\"connect\",\"searchRobots\",\"requestRobots\",\"dispatch\",\"event\",\"payload\",\"target\",\"value\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"catch\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"initialStateSearch\",\"initialStateRobots\",\"errror\",\"logger\",\"createLogger\",\"rootReducer\",\"combineReducers\",\"arguments\",\"length\",\"undefined\",\"action\",\"assign\",\"store\",\"createStore\",\"applyMiddleware\",\"thunkMiddleware\",\"ReactDOM\",\"render\",\"es\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\nimport './SearchBox.css';\\r\\n\\r\\nconst SearchBox = ({ searchfield, searchChange}) => {\\r\\n\\treturn (\\r\\n\\t\\t<div className='searchBar'>\\r\\n\\t\\t\\t<input \\r\\n\\t\\t\\t\\ttype='search' \\r\\n\\t\\t\\t\\tplaceholder='Search Robots by Name'\\r\\n\\t\\t\\t\\tonChange={searchChange}\\t\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t);\\r\\n}\\r\\n\\r\\nexport default SearchBox;\",\"import React from 'react'; \\r\\nimport './Card.css';\\r\\n\\r\\nconst Card = (props) => {\\r\\n\\treturn (\\r\\n\\t\\t<div className=\\\"robo-card\\\">\\r\\n\\t\\t\\t<img alt='robo face' src={`https://robohash.org/${props.id}`} />\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<h2>{props.name}</h2>\\r\\n\\t\\t\\t\\t<p>{props.email}</p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nexport default Card;\",\"import React from 'react';\\r\\nimport Card from './Card';\\r\\n\\r\\nconst CardList = ({ robots }) => {\\r\\n\\treturn (\\r\\n\\t\\t<div>\\t\\r\\n\\t\\t{\\r\\n\\t\\t\\trobots.map((user, i) => {\\r\\n\\t\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t\\t<Card\\r\\n\\t\\t\\t\\t\\t\\tkey={i}\\r\\n\\t\\t\\t\\t\\t\\tid={robots[i].id}\\r\\n\\t\\t\\t\\t\\t\\tname={robots[i].name}\\r\\n\\t\\t\\t\\t\\t\\temail={robots[i].email}\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t})\\r\\n\\t\\t}\\t\\t\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t);\\r\\n}\\r\\n\\r\\nexport default CardList;\",\"import React, { Component } from 'react';\\r\\n\\r\\nclass ErrorBoundary extends Component {\\r\\n\\tconstructor(props) {\\r\\n\\t\\tsuper(props);\\r\\n\\t\\tthis.state = {\\r\\n\\t\\t\\thasError: false\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tcomponentDidCatch(error, info) {\\r\\n\\t\\tthis.setState({ hasError: true })\\r\\n\\t}\\r\\n\\r\\n\\trender() {\\r\\n\\t\\tif (this.state.hasError) {\\r\\n\\t\\t\\treturn <h1>Oooops. Something went wrong</h1>\\t\\r\\n\\t\\t}\\r\\n\\t\\treturn this.props.children\\r\\n\\t} \\r\\n}\\r\\n\\r\\nexport default ErrorBoundary;\",\"import React, { Component } from 'react';\\r\\nimport { connect } from 'react-redux';\\r\\nimport SearchBox from '../components/SearchBox';\\r\\nimport CardList from '../components/CardList';\\r\\nimport ErrorBoundary from '../components/ErrorBoundary';\\r\\nimport './App.css';\\r\\nimport { setSearchField, requestRobots } from '../actions';\\r\\n\\r\\nconst mapStateToProps = state => {\\r\\n\\treturn {\\r\\n\\t\\tsearchField: state.searchRobots.searchField,\\r\\n\\t\\trobots: state.requestRobots.robots,\\r\\n\\t\\tisPending: state.requestRobots.isPending,\\r\\n\\t\\terror: state.requestRobots.error\\r\\n\\t}\\r\\n}\\r\\n\\r\\nconst mapDispatchToProps = (dispatch) => {\\r\\n\\treturn {\\r\\n\\t\\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\\r\\n\\t\\tonRequestRobots: () => dispatch(requestRobots())\\r\\n\\t}\\r\\n}\\r\\n\\r\\nclass App extends Component {\\r\\n\\tcomponentDidMount() {\\r\\n\\t\\tthis.props.onRequestRobots();\\r\\n\\t}\\r\\n\\r\\n\\trender() {\\r\\n\\t\\tconst { searchField, onSearchChange, robots, isPending } = this.props;\\r\\n\\t\\tconst filteredRobots = robots.filter(robot => {\\r\\n\\t\\t\\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\\r\\n\\t\\t})\\r\\n\\t\\treturn isPending ?\\r\\n\\t\\t\\t<h1>Loading</h1> :\\r\\n\\t\\t\\t(\\r\\n\\t\\t\\t<div className='header'>\\r\\n\\t\\t\\t\\t<h1>RoboFriends</h1>\\r\\n\\t\\t\\t\\t<SearchBox searchChange={onSearchChange}/>\\r\\n\\t\\t\\t\\t<ErrorBoundary>\\r\\n\\t\\t\\t\\t\\t<CardList robots = { filteredRobots } />\\r\\n\\t\\t\\t\\t</ErrorBoundary>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\\r\\n\",\"// importing constant variables:\\r\\nimport { \\r\\n\\tCHANGE_SEARCH_FIELD,\\r\\n\\tREQUEST_ROBOTS_PENDING,\\r\\n\\tREQUEST_ROBOTS_SUCCESS,\\r\\n\\tREQUEST_ROBOTS_FAILED\\r\\n\\t} from './constants.js'\\r\\n\\r\\n// action serSearchField returns an object:\\r\\nexport const setSearchField = (text) => ({\\r\\n\\ttype: CHANGE_SEARCH_FIELD,\\r\\n\\tpayload: text\\r\\n})\\r\\n\\r\\n// creating async actions: \\r\\nexport const requestRobots = () => (dispatch) => {\\r\\n\\tdispatch({type: REQUEST_ROBOTS_PENDING});\\r\\n\\tfetch('https://jsonplaceholder.typicode.com/users')\\r\\n\\t\\t.then(response => response.json())\\r\\n\\t\\t.then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\\r\\n\\t\\t.catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\\r\\n}\",\"export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\\r\\n\\r\\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\\r\\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\\r\\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"// importing constant variables:\\r\\nimport { \\r\\n\\tCHANGE_SEARCH_FIELD,\\r\\n\\tREQUEST_ROBOTS_PENDING,\\r\\n\\tREQUEST_ROBOTS_SUCCESS,\\r\\n\\tREQUEST_ROBOTS_FAILED\\r\\n\\t} from './constants.js'\\r\\n\\r\\n// declaring initial state for searchRobots reducer:\\r\\nconst initialStateSearch = {\\r\\n\\tsearchField: ''\\r\\n}\\r\\n\\r\\n// declaring reducer searchRobots that receives two params which have declared default values \\r\\nexport const searchRobots = (state=initialStateSearch, action ={}) => {\\r\\n\\t// using a switch method that listens to actions:\\r\\n\\tswitch(action.type) {\\r\\n\\t\\t// in case the action.type is equal to CHANGE_SEARCH_FIELD then return \\r\\n\\t\\tcase CHANGE_SEARCH_FIELD:\\r\\n\\t\\t\\treturn Object.assign({}, state, {searchField: action.payload});\\r\\n\\t\\tdefault:\\r\\n\\t\\t\\treturn state;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// declaring initial state for requestRobots reducer:\\r\\nconst initialStateRobots = {\\r\\n\\tisPending: false,\\r\\n\\trobots: [],\\r\\n\\terrror: ''\\r\\n}\\r\\n\\r\\n// declaring reducer requestRobots that receives two params which have declared default values \\r\\nexport const requestRobots = (state=initialStateRobots, action={}) => {\\r\\n\\t//using a switch method that listens to actions:\\r\\n\\tswitch(action.type) {\\r\\n\\t\\t//in case action.type is equal to REQUEST_ROBOTS_PENDING then return:\\r\\n\\t\\tcase REQUEST_ROBOTS_PENDING:\\r\\n\\t\\t\\treturn Object.assign({}, state, {isPending: true});\\r\\n\\t\\t//in case action.type is equal to REQUEST_ROBOTS_SUCCESS then return:\\r\\n\\t\\tcase REQUEST_ROBOTS_SUCCESS:\\r\\n\\t\\t\\treturn Object.assign({}, state, {robots: action.payload, isPending: false});\\r\\n\\t\\t//in case action.type is equal to REQUEST_ROBOTS_FAILED then return:\\r\\n\\t\\tcase REQUEST_ROBOTS_FAILED:\\r\\n\\t\\t\\treturn Object.assign({}, state, {error: action.payload, isPending: false});\\r\\n\\t\\tdefault:\\r\\n\\t\\t\\treturn state;\\r\\n\\t}\\r\\n}\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Provider } from 'react-redux';\\nimport thunkMiddleware from 'redux-thunk';\\nimport { createLogger } from 'redux-logger';\\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { searchRobots, requestRobots } from './reducers.js';\\n\\nconst logger = createLogger();\\nconst rootReducer = combineReducers({searchRobots, requestRobots});\\nconst store = \\n\\tcreateStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\\n\\n\\nReactDOM.render(\\n\\t<Provider store={store}>\\n\\t\\t<App /> \\n\\t</Provider>,\\n\\tdocument.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{19:function(e,t,n){e.exports=n(36)},28:function(e,t,n){},30:function(e,t,n){},32:function(e,t,n){},34:function(e,t,n){},36:function(e,t,n){\"use strict\";n.r(t);var r=n(0),a=n.n(r),o=n(4),c=n.n(o),i=n(8),s=n(17),u=n(18),l=n(3),h=(n(28),n(5)),d=n(6),E=n(9),b=n(7),m=n(10),p=(n(30),function(e){e.searchfield;var t=e.searchChange;return a.a.createElement(\"div\",{className:\"searchBar\"},a.a.createElement(\"input\",{type:\"search\",placeholder:\"Search Robots by Name\",onChange:t}))}),f=(n(32),function(e){return a.a.createElement(\"div\",{className:\"robo-card\"},a.a.createElement(\"img\",{alt:\"robo face\",src:\"https://robohash.org/\".concat(e.id)}),a.a.createElement(\"div\",null,a.a.createElement(\"h2\",null,e.name),a.a.createElement(\"p\",null,e.email)))}),g=function(e){var t=e.robots;return a.a.createElement(\"div\",null,t.map(function(e,n){return a.a.createElement(f,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})}))},O=function(e){function t(e){var n;return Object(h.a)(this,t),(n=Object(E.a)(this,Object(b.a)(t).call(this,e))).state={hasError:!1},n}return Object(m.a)(t,e),Object(d.a)(t,[{key:\"componentDidCatch\",value:function(e,t){this.setState({hasError:!0})}},{key:\"render\",value:function(){return this.state.hasError?a.a.createElement(\"h1\",null,\"Oooops. Something went wrong\"):this.props.children}}]),t}(r.Component),v=(n(34),function(e){function t(){return Object(h.a)(this,t),Object(E.a)(this,Object(b.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(d.a)(t,[{key:\"componentDidMount\",value:function(){this.props.onRequestRobots()}},{key:\"render\",value:function(){var e=this.props,t=e.searchField,n=e.onSearchChange,r=e.robots,o=e.isPending,c=r.filter(function(e){return e.name.toLowerCase().includes(t.toLowerCase())});return o?a.a.createElement(\"h1\",null,\"Loading\"):a.a.createElement(\"div\",{className:\"header\"},a.a.createElement(\"h1\",null,\"RoboFriends\"),a.a.createElement(p,{searchChange:n}),a.a.createElement(O,null,a.a.createElement(g,{robots:c})))}}]),t}(r.Component)),R=Object(i.b)(function(e){return{searchField:e.searchRobots.searchField,robots:e.requestRobots.robots,isPending:e.requestRobots.isPending,error:e.requestRobots.error}},function(e){return{onSearchChange:function(t){return e({type:\"CHANGE_SEARCH_FIELD\",payload:t.target.value})},onRequestRobots:function(){return e(function(e){e({type:\"REQUEST_ROBOTS_PENDING\"}),fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e({type:\"REQUEST_ROBOTS_SUCCESS\",payload:t})}).catch(function(t){return e({type:\"REQUEST_ROBOTS_FAILED\",payload:t})})})}}})(v);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var S={searchField:\"\"},y={isPending:!1,robots:[],errror:\"\"},j=Object(u.createLogger)(),w=Object(l.c)({searchRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:S,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case\"CHANGE_SEARCH_FIELD\":return Object.assign({},e,{searchField:t.payload});default:return e}},requestRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case\"REQUEST_ROBOTS_PENDING\":return Object.assign({},e,{isPending:!0});case\"REQUEST_ROBOTS_SUCCESS\":return Object.assign({},e,{robots:t.payload,isPending:!1});case\"REQUEST_ROBOTS_FAILED\":return Object.assign({},e,{error:t.payload,isPending:!1});default:return e}}}),C=Object(l.d)(w,Object(l.a)(s.a,j));c.a.render(a.a.createElement(i.a,{store:C},a.a.createElement(R,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[19,2,1]]]);","extractedComments":[]}